{"meta":{"title":"王涛的博客","subtitle":"wangtao","description":"wangtao,王涛的博客","author":"wangtao","url":"https://www.itnwork.com"},"pages":[{"title":"","date":"2019-03-19T02:06:41.739Z","updated":"2019-03-19T02:06:41.739Z","comments":true,"path":"baidu_verify_FD6111xvq4.html","permalink":"https://www.itnwork.com/baidu_verify_FD6111xvq4.html","excerpt":"","text":"FD6111xvq4"},{"title":"","date":"2019-03-19T02:06:41.739Z","updated":"2019-03-19T02:06:41.739Z","comments":true,"path":"google9e3369a38891851f.html","permalink":"https://www.itnwork.com/google9e3369a38891851f.html","excerpt":"","text":"google-site-verification: google9e3369a38891851f.html"},{"title":"","date":"2019-03-19T02:06:41.739Z","updated":"2019-03-19T02:06:41.739Z","comments":true,"path":"gulpfile.js","permalink":"https://www.itnwork.com/gulpfile.js","excerpt":"","text":"(function() { 'use strict'; var gulp = require('gulp'), less = require('gulp-less'), rename = require('gulp-rename'), minifycss = require('gulp-minify-css'), autoprefixer = require('gulp-autoprefixer'), uglify = require('gulp-uglify'), jshint = require('gulp-jshint'), stylish = require('jshint-stylish'), notify = require('gulp-notify'), plumber = require('gulp-plumber'), htmlclean = require('gulp-htmlclean'), htmlmin = require('gulp-htmlmin'), rev = require('gulp-rev-append'), // sequence = require('gulp-sequence'), path = require('path'), paths = { root: './', source: './themes/hexo-theme-snippet/source/' //主题下原文件 } /*==================================================== 开发主题 ====================================================*/ // CSS预处理 gulp.task('less-task', function() { return gulp.src(paths.source + 'css/less/_style.less') .pipe(plumber({ errorHandler: notify.onError('Error: ') })) .pipe(less()) .pipe(rename({basename: \"style\"})) .pipe(gulp.dest(paths.source + 'css')) .pipe(notify({message: 'less compile complete'})); }); // 校验JS语法和风格 gulp.task('js-task', function() { return gulp.src(paths.source + 'js/*.js') .pipe(jshint()) .pipe(jshint.reporter(stylish)) .pipe(gulp.dest(paths.source + 'js/')) .pipe(notify({message: 'js compile complete'})); }); // 监听任务-主题开发模式 gulp.task('dev', function() { gulp.watch(paths.source + 'css/less/*.less', function() { return gulp.src(paths.source + 'css/less/_style.less') .pipe(plumber({ errorHandler: notify.onError('Error: ') })) .pipe(less()) .pipe(rename({basename: \"style\"})) .pipe(gulp.dest(paths.source + 'css')) .pipe(notify({message: 'less compile complete'})); }); gulp.watch(paths.source + 'js/*.js', function() { return gulp.src(paths.source + 'js/*.js') .pipe(jshint()) .pipe(jshint.reporter(stylish)) .pipe(gulp.dest(paths.source + 'js/')) .pipe(notify({message: 'js compile complete'})); }); }); /*==================================================== 部署前代码处理 ====================================================*/ // 压缩处理 css gulp.task('minify-css', function() { return gulp.src('./public/**/*.css') .pipe(autoprefixer({ browsers: ['last 10 versions', 'Firefox >= 20', 'Opera >= 36', 'ie >= 9', 'Android >= 4.0', ], cascade: true, //是否美化格式 remove: false //是否删除不必要的前缀 })) .pipe(minifycss()) .pipe(gulp.dest('./public')) .pipe(notify({message: 'css minify complete'})); }); // 压缩处理 js gulp.task('minify-js', function() { return gulp.src('./public/js/*.js') .pipe(uglify()) .pipe(gulp.dest('./public/js')) .pipe(notify({message: 'js minify complete'})); }); // 压缩处理 html gulp.task('minify-html', function() { return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin({ removeComments: true, //清除HTML注释 collapseWhitespace: true, //压缩HTML minifyJS: true, //压缩页面JS minifyCSS: true, //压缩页面CSS minifyURLs: true })) .pipe(gulp.dest('./public')); }); // 添加版本号 gulp.task('rev', function() { return gulp.src('./public/**/*.html') .pipe(rev()) .pipe(gulp.dest('./public')); }); // 同步执行task //gulp.task('deploy',sequence(['minify-css','minify-js'],'rev','minify-html')); gulp.task('deploy',gulp.parallel( gulp.series( 'minify-css', 'minify-js' ), 'rev', 'minify-html' ) ); // 部署前代码处理 //gulp.task('default',['deploy'],function(e){ // console.log(\"[complete] please execute： hexo d\"); //}) gulp.task('default',gulp.series( 'deploy', function(done){ console.log(\"[complete] please execute： hexo d\"); done(); } )) })();"},{"title":"categories","date":"2019-03-06T11:12:32.000Z","updated":"2019-03-19T02:06:41.739Z","comments":true,"path":"categories/index.html","permalink":"https://www.itnwork.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-03-06T11:18:46.000Z","updated":"2019-03-19T02:06:41.739Z","comments":true,"path":"tags/index.html","permalink":"https://www.itnwork.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"hexo+github最新最完整的建站过程","slug":"hexo+github最新最完整的建站过程","date":"2019-03-12T00:08:08.000Z","updated":"2019-03-19T02:06:41.739Z","comments":true,"path":"archives/85cb8b79.html","link":"","permalink":"https://www.itnwork.com/archives/85cb8b79.html","excerpt":"","text":"一、注册github账号github注册地址 另外github支持当前版本的Chrome、Firefox、Safari和Microsoft Edge。 填写注册信息： 其中Username为你github账户的名字，取完之后就改不了了。 Email address为你的邮箱地址。 Password设置你的密码。 然后点击验证，Create an account. 继续Continue,这一步你可以选择跳过，也可以根据你的情况选择一下submit。 然后确认下你的邮箱； 确认完后登录到你的github页面。 点击Your repositories 二、创建github pages点击New，新建一个仓库。 Repository name必须是这种格式 xxxx.github.io。 xxxx为你刚刚注册github账号的名字。 点击Create repository后，跳转到下面这个页面。 点击Settings 。 至此你的github静态页面存储库就创建成功了。不防点下你的新建的网址，https://your_github_repostoriesName.github.io 试试看。 三、本地连接GitHub 生成SSH添加到GitHub现在我们需要在本地配置下git，让它能连接到Github仓库。 git config --global user.name &quot;yourname&quot; git config --global user.email &quot;youremail&quot;例如我的： git config --global user.name &quot;doerteacher&quot;，注册github的账号名称。 git config --global user.email &quot;xxxxxxx@qq.com&quot;,注册github的邮箱。 然后创建ssh，一路回车。 ssh-keygen -t rsa -C “youremail” 默认生成ssh key在C:\\Users\\电脑用户名\\ .ssh文件夹下。 然后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key把你id_rsa.pub里面的信息复制进去。 点击Setting，进入SSH and GPG keys页面。点击SSH and GPG keys，然后点击New SSH key。Title随便起个名，比如blog。把id_rsa.pub里面的信息复制到Key里面。 然后输入 ssh -T git@github.com 检测下是否配置成功。 然后会得到如下信息，证明你配置成功了。Hi DoerTeacher! You’ve successfully authenticated, but GitHub does not provide shell access. 四、Hexo创建 Hexo创建前环境准备 Git安装下载Git 基于你电脑的系统自行选择下载哪个版本。 如果不会Git怎么安装的话，网上自己搜索下Git具体安装步骤。 nodejs安装nodejs下载 基于你电脑的系统自行选择下载哪个版本。 如果不会nodejs怎么安装的话，网上自己搜索下Git具体安装步骤。 安装完后，打开cmd工具,输入node -v 检测下安装的版本。 至此nodejs安装完毕。 接下来就可以真正安装hexo了。 Hexo安装首先在自己电脑的D盘，建个存储Hexo文件的文件夹。 例如我在D盘user文件夹下新建了个Hexo文件夹： ##然后打开自己电脑的Git Bash 然后cd到Hexo文件夹下，输入 npm install -g hexo-cli，安装hexo。 输入hexo -v，看下hexo当前版本 然后初始化hexo hexo init blog 然后cd到刚刚初始化的blog文件夹下。cd blog/ 这时你会发现新建了这么几个文件。 然后安装npm 依赖项。 npm install 然后hexo g，生成静态文件。 然后 ls,你会发现多了public文件夹，这就是生成的静态文件页面。 然后 hexo server 启动服务器。 访问网址为： http://localhost:4000/ 然后就进入了hello world的页面。 这时就代表了你的hexo安装完成了。 前面我们已经在github上建了存储静态页面的仓库并配置了本地连接Github。 然后我们就可以把hexo生成的页面部署到github上了。 五、将hexo部署到GitHub打开站点配置文件 _config.yml，在刚才生成的blog目录下。在_config.yml最下面，找到deploy： 修改为 deploy: type: git repository: git@github.com:DoerTeacher/doerteacher.github.io.git branch: master DoerTeacher就是我的GitHub账户名，你得改成你自己的。 repository地址也可以到自己GitHub账户的仓库下复制。 然后安装 部署到github插件的依赖npm install hexo-deployer-git --save这个时候就可以开始真正地将hexo部署到github上了。hexo deploy然后就可以在http://doerteacher.github.io ，访问你自己的博客了。 其中doerteacher.github.io为你之前创建的Repository Name。 然后你就可以看到这样的页面了。 至于hexo的使用、添加评论功能、绑定自定义域名，以及自动化集成部署我将会在下一篇博文中完整地整理出来。","categories":[{"name":"技术","slug":"技术","permalink":"https://www.itnwork.com/categories/技术/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.itnwork.com/tags/hexo/"},{"name":"github","slug":"github","permalink":"https://www.itnwork.com/tags/github/"},{"name":"建站","slug":"建站","permalink":"https://www.itnwork.com/tags/建站/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://www.itnwork.com/categories/技术/"}]},{"title":"万网DNS与其他云解析系统比较","slug":"万网DNS与其他云解析系统比较","date":"2019-03-08T11:18:57.000Z","updated":"2019-03-19T02:06:41.739Z","comments":true,"path":"archives/f21a6563.html","link":"","permalink":"https://www.itnwork.com/archives/f21a6563.html","excerpt":"","text":"注册域名以后，您只拥有了这个域名的使用权，但无法通过域名直接访问您的网站，或作为电子邮箱后缀进行邮件收发。原因在于，域名只是为了方便记忆而专门建立的一套地址转换系统，要访问一台互联网上的服务器，必须通过 IP 地址来实现。而域名解析就是将域名指向 IP 地址的过程。“域名解析”是使用域名的必备环节。 您需要选择优秀的服务商，确保您的域名在解析过程中拥有稳定、快速、安全的服务保障，从而获得最佳的服务器访问体验。 一、什么是万网云解析？万网云解析是万网 DNS 系统面向全网域名升级开放的免费智能域名解析服务，提供稳定、安全、极速的域名解析能力，支持非万网域名海外 IP 解析，且全部功能免费使用。 12345671、稳定，99.99% 服务可用率。阿里强大的网络基础设施布局，独享多线 BGP 的多机房集群自动宕机迁移，系统性能监测实时报警，让每一次访问使命必达！2、安全，拥有淘宝级防护能力。阿里自主研发的超百 G 流量清洗中心，可对攻击行为迅速做出判断跟踪，并按照预案进行处理，确保域名解析服务稳定可靠！3、极速，解析实时生效。域名解析记录实时更新，自动判断访问用户来自联通、电信、移动、教育易用，强大功能轻松体验。直观简捷的操作面板与友好的功能提示，人性化解析设置操作零成本上手，随时启动云解析的强大功能！4、平滑，解析切换无感知。域名添加成功后，即可预设解析记录，一旦 DNS 更换生效，解析服务平滑切换，访问体验不中断！ 二、万网域名解析的优势来自 DailyChange 的权威第三方数据统计显示，万网云解析是国内域名解析市场第一的服务提供商，拥有最多的域名解析保有量。基于万网 19 年的稳定解析服务保障，以及阿里的技术能力与网络基础设施布局，超过 300 万域名用户正在使用万网云解析。 万网云解析提供了 99.99% 的服务可用率保证，拥有淘宝级的安全防护能力，以及实时解析生效，确保稳定、安全、极速的解析能力；支持高质量的电信、联通、移动、教育网和海外的多线智能解析，获得最流畅的访问体验；全部功能均免费面向所有用户提供。 新版万网云解析升级发布，开放支持非万网域名以及海外 IP 解析。 域名注册商提供的免费服务Godaddy：不在Godaddy注册域名，也可以使用Godaddy的域名解析服务，使用方法很简单，登录Godaddy网站后，点击“Add Off-site DNS”即可添加用户的域名，之后将用户域名的DNS设置为Godaddy指定的地址，域名DNS生效后，即可点击添加的域名进行DNS解析设置。 NameCheap：知名的域名注册商NameCheap也和Godaddy一样，提供免费DNS域名解析，点击“FreeDNS”后，即可添加用户域名，用户可以通过修改DNS或域名邮件来验证自己的域名，NameCheap的解析服务支持的功能有：网址转发（可隐藏原URL、支持301重定向）、邮件转发、A记录、CNAME别名记录、MX邮件记录、TXT文本记录、NS记录、AAAA记录（IPV6）、动态域名解析等等。 国内免费域名解析服务DNSPod：DNSPod是国内运营较久的免费DNS解析服务，除了免费服务外，还提供多项收费服务。DNSPod的功能较多，支持电信、网通、教育网双线或者三线智能DNS解析，在中国国内解析速度较快，但对于国外的Google爬虫来说经常出现无法访问的情况。 DNS.La：也是类似DNSPod的免费DNS解析服务，可以为同时有电信、联通、教育网服务器的网站提供免费智能DNS的解析。 EDNS：易名中国提供的免费域名解析服务，非易名中国用户也可使用。 国外免费域名解析服务ZoneEdit：美国著名的老牌免费域名DNS解析服务，成立于1999年。免费帐户最多可添加5个域名。解析类型：A记录、AAAA记录、 TXT文本记录、LOC记录、PTR记录、CNAME别名记录、MX邮件记录、网址转发、邮件转发等。界面超级简洁，速度快，稳定。 HE.NET：是美国老牌IDC，成立于1994年，在技术领域比较强，尤其是IPV6应用。这个免费DNS解析服务最多可以添加50个域名，可以设置A记录、AAAA记录、CNAME别名记录、MX邮件记录、NS记录、TXT记录、SRV记录。 FreeDNS：一家美国免费域名DNS解析服务网站，界面简洁，注册简单，支持添加任何后缀的域名，支持Google Apps服务。免费域名DNS解析服务有三种模式：简单模式可直接设置IP指向、转发模式可设置301永久重定向和302临时重定向、高级模式可设置A记录、AAAA记录、CNAME记录、MX记录、PTR记录、TXT记录。 afraid：美国一家免费域名解析服务，运营了相当长的时间了，值得提醒的是按照官方规定六个月账号必须有一次登录，否则账号会被锁定 。 CDN服务自带域名解析CloudFlare：虽然它的主营业务是CDN（Anycast），但丝毫不影响它作为免费DNS的声誉，况且这个免费DNS是真的全球分布（12个节点），且使用了CDN技术。 百度加速乐：加速乐也主要是CDN业务，顺带提供DNS域名解析，提供抗CC攻击、免费DNS解析、免费分省解析、防黑客攻击、黑链暗链防护、页面篡改防护服务。","categories":[{"name":"新媒体","slug":"新媒体","permalink":"https://www.itnwork.com/categories/新媒体/"}],"tags":[{"name":"DNS","slug":"DNS","permalink":"https://www.itnwork.com/tags/DNS/"},{"name":"云解析","slug":"云解析","permalink":"https://www.itnwork.com/tags/云解析/"}],"keywords":[{"name":"新媒体","slug":"新媒体","permalink":"https://www.itnwork.com/categories/新媒体/"}]},{"title":"二月二龙抬头","slug":"二月二龙抬头","date":"2019-03-08T09:12:12.000Z","updated":"2019-03-19T02:06:41.739Z","comments":true,"path":"archives/c40fbf14.html","link":"","permalink":"https://www.itnwork.com/archives/c40fbf14.html","excerpt":"","text":"18年已经过去两个月了，我翻开笔记本，看着我一年的晨间日记，还有那几个小目标，陷入了沉思。 很久之前都想对去年做个总结，对今年做下展望，由于惰性，一直拖到现在才来开始做。 对于19年我的愿望是什么，我一直在问我自己。 最后通过对过去不断地总结我发现，我19年的最大愿望，就是继续完成18年未完成的愿望。 回顾2018，做的对的几件大事： 一直把学习放在第一位； 对于错误的方向果断的放下； 自修能量改变自己； 做的错的几件事情： 低谷的时候沉迷，没能站高一线，看待全局； 我过去成功的经验，反而成了我上半年道路上的阻碍； 当我在抱怨的时候，有大把人在偷偷赚大钱； 对待2019，将要做的三件事： 1、自修能量改变自己 2、珍惜身边关心自己的人 3、确定下来未来五年将要坚持做的事情。 对于自己能够不断地自修能量改变自己，我最应该感谢见证了我的起起落落，一直陪伴在我左右的一群人，没有他们不会有我现在的改变。 人只有在你没有势能的时候才能看清人的本质，所以，举杯，庆祝人生的低谷，让你可以认清身边很多风景。 做事是术，做人是道，道是根本！ 学到影响最深刻的几句话是： 正念厚德，利众利他 格局决定高度，心态决定状态，初心决定未来 做好自己，做个好人，用真心换真心 脚踏实地，不抄近道 言而有信，有诺必践 有一句金句对我感触很大：我们每年要把自己的能力提升30%，收入至少也要提升30%，如果你能力提升了，收入没有提升，那你需要换圈子！ 经营自己的圈子是多么重要，这一点我最佩服蝉老大，做人他第一，没有之一。 亿万身家还能做好一个小弟，真的太难了。 我和他距离还有很多段。 最近在家里闭关，给2019年布局： 空杯心态不断学习，体系不断完善； 自修——八风吹不动，端坐紫金莲； 善待生命中出现的每一个人，因为三世修炼才换今生一次回眸； 带父母出去旅行一次； 多认识10个朋友； 保持锻炼；","categories":[{"name":"文章","slug":"文章","permalink":"https://www.itnwork.com/categories/文章/"}],"tags":[{"name":"规划","slug":"规划","permalink":"https://www.itnwork.com/tags/规划/"}],"keywords":[{"name":"文章","slug":"文章","permalink":"https://www.itnwork.com/categories/文章/"}]}]}